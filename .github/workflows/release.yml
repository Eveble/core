# Evaluates on push event if release is necessary and if so - create a release Pull Request
name: Push to release branches
on:
  push:
    branches: [master, next, alpha, beta]
env:
  # Setting an environment variable with the value of a configuration variable
  IS_ON_NPM: ${{ vars.IS_ON_NPM }}
  USERNAME: ${{ github.event.github.actor }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  EVEBLE_TYPES_AUTH_TOKEN: ${{ secrets.EVEBLE_TYPES_AUTH_TOKEN }}
jobs:
  # Release with semantic-release an auto-merged branch to: Github repository, NPM, Github package registry
  release:
    name: Release to Github, NPM, Github, GitHub Packages
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
    permissions:
      packages: write
      contents: write
      issues: write
      pull-requests: write
    # Released version with semantic-release will use `semantic-release-bot` as
    # commit author and commit with message:
    #"chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
    # This is generated by `@semantic-release/git` in `.releaserc.json`
    if: >
      github.actor != 'semantic-release-bot'
      && ! contains(github.event.head_commit.message, 'chore(release):')
    steps:
      - name: ü™¨ Set env
        run: |
          echo @${{ env.IS_ON_NPM }}
          if [[ $IS_ON_NPM == 'true' ]]; then
              echo "REGISTRY_URL=https://registry.npmjs.org" >> "$GITHUB_ENV"
              echo "NODE_AUTH_TOKEN=$NPM_TOKEN" >> "$GITHUB_ENV"
          else
              echo "REGISTRY_URL=https://npm.pkg.github.com" >> "$GITHUB_ENV"
              echo "NODE_AUTH_TOKEN=$GITHUB_TOKEN" >> "$GITHUB_ENV"
          fi
      - name: ‚§µÔ∏è  Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        # THIS WILL DEFINE WHICH REGISTRY IS USED ON SEMANTIC
        # It does not care if you are using extra-plugin: @semantic-release/npm@9.0.2
        # If registry-url is defined to: registry-url: 'https://npm.pkg.github.com/'
        # It will always try to publish the package on github AND NOT npm
        # On top of this issue:
        # IT WILL COMPLETELY ignore GH_TOKEN, GITHUB_TOKEN, NPM_TOKEN
        # IT will always use NODE_AUTH_TOKEN to define what will be used to
        # authenticate with the registry.
        # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      - name: ‚öôÔ∏è Setup Node@18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url:  ${{ env.REGISTRY_URL }}
          scope: ${{ env.USERNAME }}
      - name: üöß  Install dependencies
        run: yarn install
        env:
          NODE_AUTH_TOKEN: ${{ env.EVEBLE_TYPES_AUTH_TOKEN }}
      - name: ‚úÖ„ÄÄTest
        run: yarn test
      - name: üèóÔ∏è Build
        run: yarn build
      - name: üöÄ  Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          semantic_version: 19.0.5
          dry_run: false
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            @semantic-release/npm@9.0.2
        env:
          # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          # NPM_TOKEN & GH_TOKEN will be ignored, use NODE_AUTH_TOKEN
          # https://github.com/semantic-release/semantic-release/issues/2313
          # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: üéâ Output release
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo @${{ env.USERNAME }}
      - name: üîÄ Setup Node with GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: 'https://npm.pkg.github.com'
          scope: ${{ env.USERNAME }}
          always-auth: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}
      - name: üéâ  Publish To GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: üöß  Install dependencies on Docusaurus
        run: |
          cd ./website
          yarn install
      - name: üìÑ  Build docs
        run: yarn docs:build
      - name: Fix 404 Page not found for Github in case .nojekyll is missing in ./website/static
        run: touch ./website/build/.nojekyll
      - name: ü§ì Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
          publish_branch: gh-pages # deploying branch
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
